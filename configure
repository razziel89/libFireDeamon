#!/bin/bash
# libFireDeamon local configuration generator
#
# Will generate a file called "make.vars" which contains
# local configuration parameters.

cat << EOF
This script is not like your ordinary configure script as it has not been
created using autoconf and automake (or similar) but manually. Hence, you won't
get messages about libraries not found or similar things. Instead, it only uses
the proviced flags to generate a file called "make.vars" which contains
important variables for the Makefile. If libraries/headers cannot be found, you
will get these error messages during the make process.
EOF

# Output file name
output=make.vars
commandlinesave="$@"

# Default configuration options
tmp=$(mktemp -u | awk -v FS=/ '{print $NF}')
if mkdir -p /usr/local/include/FireDeamon/$tmp &>/dev/null
then
    rmdir /usr/local/include/FireDeamon/$tmp
    rmdir /usr/local/include/FireDeamon/ &>/dev/null
    PREFIX=/usr/local
else
    PREFIX=$HOME/local
fi
unset tmp
OBJDIR=objdir
LIBDIR=lib
INCDIR=include
SRCDIR=src
TESTDIR=test
PYTHONDIR=bindings
if [[ $(uname -i) == x86_64 ]]
then
    PYTHONLIB=/usr/lib64
    CGALLIB=/usr/lib64
else
    PYTHONLIB=/usr/lib
    CGALLIB=/usr/lib
fi
USEPYTHON=true
CGALINC=/usr/include
BOOSTINC=/usr/include
GXX=$(which g++)
AR=$(which ar)
SWIG=$(which swig)
PYTHON=$(which python)
pythonversion="$($PYTHON -c 'import sys; sys.stdout.write(sys.version[:3]+"\n")')"
libpython="python${pythonversion}"
PYTHONINC="/usr/include/python${pythonversion}"
swigversion=$($SWIG -version | awk '$1 ~ /SWIG/ && $2 ~ /Version/{print $3}')
SWIGINC="$(dirname $SWIG)/../share/swig/$swigversion/python"
compilertype=gnu
DEBUG=
SWIGRUN=false
ADD_LDFLAGS=
ADD_PYLDFLAGS=
MINIMUMDEPS=true

function helptext {
cat << EOF
Will generate a file called "make.vars" which contains local configuration
parameters. Heavy optimization will be used (-O3 flag) because of the huge
speedup it provides.

Usage:
configure --prefix PREFIX [FLAGS]

Each --enable-XXX flag has a corresponding --disable-XXX
flag that can be used to turn off the feature.

Flags:
--prefix                the prefix for the whole installation (default: $PREFIX)
--enable-python         will also build python bindings (default: enabled)
--inc                   set all include directories to this value.
                        Further diversification possible using
                        following inc options (default: $CGALINC)
--lib                   set all lib directories to this value.
                        Further diversification possible using
                        following lib options (default: $CGALLIB)
--cgal-inc              the cgal include directory (default: $CGALINC)
--cgal-lib              the cgal lib directory. Contains libCGAL.so (default: $CGALLIB)
--python-inc            the python include directory. (default: $PYTHONINC)
--python-lib            the python lib directory. (default: $PYTHONLIB)
--swig                  will use the specified swig executable.
                        (default: $SWIG)
--swig-inc              the directory for swigs *.i files (default: $SWIGINC)
--run-swig              rebuild python bindings (default: don't)
--ar                    will use the specified ar.
                        (default: $AR)
--g++                   will use the specified g++ compiler.
                        (default: $GXX)
--python                will use the specified python interpreter.
                        (default: $PYTHON)
--compiler-type         declare what type of compiler you want to be using.
                        This can be GNU (default) or Intel (case insensitive).
--debug                 enable debugging mode, switch off optimization and
                        use CGAL without rounding math checks (warning: will
                        probably yield wrong results)

The environment variables OTHERINC, OTHERLIB and LDFLAGS are respected.
This means that you should fill them BEFORE executing this configure
script.
OTHERINC contains flags for include directories (e.g. -IAddIncDir)
OTHERLIB contains flags for library directory (e.g. -LAddLibDir)
LDFLAGS contains flags for libking additional libraries (e.g. -lAdd)
EOF
}

function nospace {
if grep -q -E "\s" <<< "$1"
then
    echo "A path with spaces is not supported, sorry. Aborting." >&2
    echo "Bad path: $1" >&2
exit 101
fi
}

function notdef {
if [[ ! "$2" ]]
then
    echo "Flag $1 not defined, aborting." >&2
    exit 102
fi
}

#read in command line parameters
while [[ $# -gt 0 ]]
do
    case "$1" in
        --prefix)
            shift
            PREFIX="$1"
        ;;
        --enable-python)
            USEPYTHON=true
        ;;
        --disable-python)
            USEPYTHON=false
        ;;
        --run-swig)
            SWIGRUN=true
        ;;
        --inc)
            shift
            nospace "$1"
            pythonversion="$($PYTHON -c 'import sys; print sys.version[:3]')"
            libpython="python${pythonversion}"
            PYTHONINC="$1/python${pythonversion}"
            CGALINC="$1"
            BOOSTINC="$1"
            SWIGINC="$1"
        ;;
        --lib)
            shift
            nospace "$1"
            PYTHONLIB="$1"
            CGALLIB="$1"
        ;;
        --python-inc)
            shift
            nospace "$1"
            PYTHONINC="$1"
        ;;
        --python-lib)
            shift
            nospace "$1"
            PYTHONLIB="$1"
        ;;
        --cgal-inc)
            shift
            nospace "$1"
            CGALINC="$1"
        ;;
        --cgal-lib)
            shift
            nospace "$1"
            CGALLIB="$1"
        ;;
        --boost-inc)
            shift
            nospace "$1"
            BOOSTINC="$1"
        ;;
        --ar)
            shift
            nospace "$1"
            AR="$1"
        ;;
        --swig)
            shift
            nospace "$1"
            SWIG="$1"
        ;;
        --swig-inc)
            shift
            nospace "$1"
            SWIGINC="$1"
        ;;
        --g++)
            shift
            nospace "$1"
            GXX="$1"
        ;;
        --python)
            shift
            nospace "$1"
            PYTHON="$1"
        ;;
        --compiler-type)
            shift
            case ${1,,} in
                gcc|gnu|g++|gpp)
                    compilertype=gnu
                    ;;
                intel)
                    compilertype=intel
                    ;;
            esac
        ;;
        --debug)
            DEBUG=1
        ;;
        *)
            helptext
            echo "Command line option $1 not known, aborting and printing help text."
            exit 100
        ;;
    esac
    shift
done

notdef --prefix "$PREFIX" 

if [[ -d $CGALLIB ]] && [[ -d $CGALINC ]] && [[ -d $BOOSTINC/boost ]]
then
    if ls $CGALLIB/libCGAL.so &>/dev/null
    then
        MINIMUMDEPS=false
    fi
fi
if [[ $MINIMUMDEPS == true ]]
then
    echo "Will build with minimum dependencies (i.e., without boost and cgal) because they could not be found."
fi


case $compilertype in
    gnu)
        rounding="-frounding-math"
        ;;
    intel)
        rounding="-fp-model strict"
        ADD_LDFLAGS="-static-intel"
        ADD_PYLDFLAGS="-static-intel"
        ;;
esac

if [[ "$USEPYTHON" == "true" ]]
then
    notdef --python-inc "$PYTHONINC"
    notdef --python-lib "$PYTHONLIB"
fi

echo "Using swig:               $SWIG"
echo "Using g++:                $GXX"
echo "Using ar:                 $AR"
echo "Using swig include:       $SWIGINC"
if [[ ! -d $SWIGINC ]] && ! [[ $MINIMUMDEPS == true ]]
then
    echo "The swig inclusion directory $SWIGINC does not exist, aborting."
    exit 102
fi

if [[ "$USEPYTHON" == "true" ]]
then
    echo "Using python:             $PYTHON"
fi

cat > $output << EOF
# This file was built as follows."
# $0 $commandlinesave

PREFIX      := $PREFIX

SRCDIR      := $SRCDIR
OBJDIR      := $OBJDIR
LIBDIR      := $LIBDIR
INCDIR      := $INCDIR
TESTDIR     := $TESTDIR

GXX         := $GXX $([[ $DEBUG -eq 1 ]] && echo " -O0 -g -DFDDEBUG" || echo " -O3")
AR          := $AR

OTHERINC    := $OTHERINC
OTHERLIB    := $OTHERLIB

LDFLAGSMIN  := $LDFLAGS $ADD_LDFLAGS -lpthread
LDFLAGSMAX  := -lmpfr -lgmp -lboost_thread -lCGAL
CPPFLAGSMAX := $rounding
CPPFLAGSMIN := $CPPFLAGS

CGALLIB     := $CGALLIB
CGALINC     := $CGALINC
BOOSTINC    := $BOOSTINC

PYTHONDIR   := $PYTHONDIR
PYTHONLIB   := $PYTHONLIB
PYTHONINC   := $PYTHONINC
PYTHON      := $PYTHON

PYTHONLDFLAGS := $LDFLAGS $ADD_PYLDFLAGS -l$libpython

SWIG        := $SWIG
SWIGINC     := $SWIGINC

USEPYTHON   := $USEPYTHON
SWIGRUN     := $SWIGRUN
MINIMUMDEPS := $MINIMUMDEPS
EOF

for dir in $OBJDIR $LIBDIR $INCDIR $SRCDIR $PYTHONDIR $TESTDIR
do
    [ ! -d $dir ] && mkdir -p $dir
done
exit 0
