#!/bin/bash
# libFireDeamon local configuration generator
#
# Will generate a file called "make.vars" which contains
# local configuration parameters.

cat << EOF
This script is not like you ordinary configure script as it has not been
created using autoconf and automake but manually. hence, you won't get
messages about libraries not found or similar things. Instead, it only uses
the proviced flags to generate a file called "make.vars" which contains
important variables for the Makefile. If libraries/headers cannot be found,
you will get these error messages during the make process.
EOF

# Output file name
output=make.vars
commandlinesave="$@"

# Default configuration options
PREFIX=
OBJDIR=objdir
LIBDIR=lib
INCDIR=include
SRCDIR=src
TESTDIR=test
PYTHONDIR=bindings

PYTHONLIB=
PYTHONINC=
CGALLIB=
CGALINC=
BOOSTINC=
SWIGINC=
GXX=
AR=
SWIG=
PYTHON=
DEBUG=

compilertype=gnu
ADD_LDFLAGS=
ADD_PYLDFLAGS=

USEPYTHON=true

function helptext {
cat << EOF
Will generate a file called "make.vars" which contains
local configuration parameters. Heavy optimization will be used
(-O3 flag) because of the huge speedup it provides.

Usage:
configure --prefix PREFIX -I INCLUDEDIR -L LIBDIR [FLAGS]

Each --enable-XXX flag has a corresponding --disable-XXX
flag that can be used to turn off the feature.

Flags:
--prefix                the prefix for the whole installation
--enable-python         will also build python bindings
--inc                   set all include directories to this value.
                        Further diversification possible using
                        following inc options
--lib                   set all lib directories to this value.
                        Further diversification possible using
                        following lib options
--cgal-inc              the cgal include directory
--cgal-lib              the cgal lib directory. Contains
                            libCGAL.so and libCGAL_ImageIO.so
--python-inc            the python include directory. NOT YET NEEDED
--python-lib            the python lib directory. NOT YET NEEDED
--swig                  will use the specified swig executable.
                        Deafault: first in PATH
--swig-inc              the directory for swigs *.i files
--ar                    will use the specified ar.
                        Deafault: first ar in PATH
--g++                   will use the specified g++ compiler.
                        Deafault: first g++ in PATH
--python                will use the specified python interpreter.
                        Deafault: first in PATH
--compiler-type         declare what type of compiler you want to be using.
                        This can be GNU (default) or Intel (case insensitive).
--debug                 enable debugging mode, switch off optimization and
                        use CGAL without rounding math checks (warning: will
                        probably yield wrong results)

The environment variables OTHERINC, OTHERLIB and LDFLAGS are respected.
This means that you should fill them BEFORE executing this configure
script.
OTHERINC contains flags for include directories (e.g. -IAddIncDir)
OTHERLIB contains flags for library directory (e.g. -LAddLibDir)
LDFLAGS contains flags for libking additional libraries (e.g. -lAdd)
EOF
}

function nospace {
if grep -q -E "\s" <<< "$1"
then
    echo "A path with spaces is not supported, sorry. Aborting." >&2
    echo "Bad path: $1" >&2
exit 101
fi
}

function notdef {
if [[ ! "$2" ]]
then
    echo "Flag $1 not defined, aborting." >&2
    exit 102
fi
}

#read in command line parameters
while [[ $# -gt 0 ]]
do
    case "$1" in
        --prefix)
            shift
            PREFIX="$1"
        ;;
        --enable-python)
            USEPYTHON=true
        ;;
        --disable-python)
            USEPYTHON=false
        ;;
        --inc)
            shift
            nospace "$1"
            PYTHONINC="$1"
            CGALINC="$1"
            BOOSTINC="$1"
            SWIGINC="$1"
        ;;
        --lib)
            shift
            nospace "$1"
            PYTHONLIB="$1"
            CGALLIB="$1"
        ;;
        --python-inc)
            shift
            nospace "$1"
            PYTHONINC="$1"
        ;;
        --python-lib)
            shift
            nospace "$1"
            PYTHONLIB="$1"
        ;;
        --cgal-inc)
            shift
            nospace "$1"
            CGALINC="$1"
        ;;
        --cgal-lib)
            shift
            nospace "$1"
            CGALLIB="$1"
        ;;
        --boost-inc)
            shift
            nospace "$1"
            BOOSTINC="$1"
        ;;
        --ar)
            shift
            nospace "$1"
            AR="$1"
        ;;
        --swig)
            shift
            nospace "$1"
            SWIG="$1"
        ;;
        --swig-inc)
            shift
            nospace "$1"
            SWIGINC="$1"
        ;;
        --g++)
            shift
            nospace "$1"
            GXX="$1"
        ;;
        --python)
            shift
            nospace "$1"
            PYTHON="$1"
        ;;
        #--rounding-type)
        --compiler-type)
            shift
            case ${1,,} in
                gcc|gnu|g++|gpp)
                    compilertype=gnu
                    ;;
                intel)
                    compilertype=intel
                    ;;
            esac
        ;;
        --debug)
            DEBUG=1
        ;;
        *)
            helptext
            echo "Command line option $1 not known, aborting and printing help text."
            exit 100
        ;;
    esac
    shift
done

notdef --prefix "$PREFIX" 
notdef --cgal-lib "$CGALLIB" 
notdef --cgal-inc "$CGALINC" 
notdef --boost-inc "$BOOSTINC" 

case $compilertype in
    gnu)
        rounding="-frounding-math"
        ;;
    intel)
        rounding="-fp-model strict"
        ADD_LDFLAGS="-static-intel"
        ADD_PYLDFLAGS="-static-intel"
        ;;
esac

if [ "$USEPYTHON" == "true" ]
then
    notdef --python-inc "$PYTHONINC"
    notdef --python-lib "$PYTHONLIB"
fi

if [[ ! "$SWIG" ]]
then
    SWIG=$(which swig)
fi
echo "Using swig:               $SWIG"
if [[ ! "$GXX" ]]
then
    GXX=$(which g++)
fi
echo "Using g++:                $GXX"
if [[ ! "$AR" ]]
then
    AR=$(which ar)
fi
if [[ ! "$SWIGINC" ]]
then
    swigversion=$($SWIG -version | awk '$1 ~ /SWIG/ && $2 ~ /Version/{print $3}')
    if [ -d $(dirname $SWIG)/../share/swig/$swigversion/python ]
    then
        SWIGINC="$(dirname $SWIG)/../share/swig/$swigversion/python"
    else
        echo "The swig inclusion directory $(dirname $SWIG)/../share/swig/$swigversion/python does not exist, aborting."
        exit 102
    fi
fi
echo "Using swig include:       $SWIGINC"

if [ "$USEPYTHON" == "true" ]
then
    if [[ ! "$PYTHON" ]]
    then
        PYTHON=$(which python)
    fi
    echo "Using python:             $PYTHON"
    pythonversion="$($PYTHON -c 'import sys; print sys.version[:3]')"
    libpython="python${pythonversion}"
    PYTHONINC="$PYTHONINC/python${pythonversion}"
fi

cat > $output << EOF
# This file was built as follows."
# $0 $commandlinesave

PREFIX    := $PREFIX

SRCDIR    := $SRCDIR
OBJDIR    := $OBJDIR
LIBDIR    := $LIBDIR
INCDIR    := $INCDIR
TESTDIR   := $TESTDIR

GXX       := $GXX $([[ $DEBUG -eq 1 ]] && echo " -O0 -g -DFDDEBUG" || echo " -O3")
AR        := $AR

CGALLIB   := $CGALLIB
CGALINC   := $CGALINC

BOOSTINC  := $BOOSTINC

OTHERINC  := $OTHERINC
OTHERLIB  := $OTHERLIB

LDFLAGS   := $LDFLAGS $ADD_LDFLAGS -lmpfr -lgmp -lboost_thread -lCGAL -lCGAL_ImageIO -lpthread
CPPFLAGS  := $CPPFLAGS $rounding

EOF
if [ "$USEPYTHON" == "true" ]
then cat >> $output << EOF
SWIG      := $SWIG
SWIGINC   := $SWIGINC/python

PYTHONDIR     := $PYTHONDIR
PYTHONLIB     := $PYTHONLIB
PYTHONINC     := $PYTHONINC
PYTHON        := $PYTHON

PYTHONLDFLAGS := $LDFLAGS $ADD_PYLDFLAGS -l$libpython

EOF
fi
cat >> $output << EOF
USEPYTHON     := $USEPYTHON
EOF

for dir in $OBJDIR $LIBDIR $INCDIR $SRCDIR $PYTHONDIR $TESTDIR
do
    [ ! -d $dir ] && mkdir -p $dir
done
exit 0
